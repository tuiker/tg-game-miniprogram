<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hou_tai.model.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.hou_tai.model.pojo.UserInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_img" jdbcType="VARCHAR" property="userImg" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="recent_login_time" jdbcType="TIMESTAMP" property="recentLoginTime" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="INTEGER" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, user_img, `password`, recent_login_time, create_id, create_time, update_id, 
    update_time, role_id, channel_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hou_tai.model.pojo.UserInfo">
    insert into user_info (id, user_name, user_img, 
      `password`, recent_login_time, create_id, 
      create_time, update_id, update_time, 
      role_id, channel_id)
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userImg,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{recentLoginTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{roleId,jdbcType=INTEGER}, #{channelId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hou_tai.model.pojo.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userImg != null">
        user_img,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="recentLoginTime != null">
        recent_login_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null">
        #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="recentLoginTime != null">
        #{recentLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hou_tai.model.pojo.UserInfo">
    update user_info
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userImg != null">
        user_img = #{userImg,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="recentLoginTime != null">
        recent_login_time = #{recentLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hou_tai.model.pojo.UserInfo">
    update user_info
    set user_name = #{userName,jdbcType=VARCHAR},
      user_img = #{userImg,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      recent_login_time = #{recentLoginTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      role_id = #{roleId,jdbcType=INTEGER},
      channel_id = #{channelId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getRandomUserId" resultType="java.lang.Long">
    SELECT id FROM user_info where id !=1 ORDER BY RAND() LIMIT 1;
  </select>
</mapper>